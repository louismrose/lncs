% This file was created with JabRef 2.7.2.
% Encoding: Cp1252

@STANDARD{AUTOSAR_OS_SPEC,
  title = {{Specification of Operating System}},
  organization = {AUTOSAR},
  institution = {AUTOSAR},
  author = {AUTOSAR},
  number = {034},
  year = {2011},
  url = {http://www.autosar.org/download/R4.0/AUTOSAR_SWS_OS.pdf},
  owner = {tpiper},
  timestamp = {2013.01.15}
}

@STANDARD{AUTOSAR_WDM_SPEC,
  title = {{Specification of Watchdog Manager}},
  organization = {AUTOSAR},
  institution = {AUTOSAR},
  author = {AUTOSAR},
  number = {080},
  year = {2011},
  url = {http://www.autosar.org/download/R4.0/AUTOSAR_SWS_WatchdogManager.pdf},
  owner = {tpiper},
  timestamp = {2013.01.15}
}

@INPROCEEDINGS{Cotard2012a,
  author = {Cotard, S. and Faucou, S. and Bechennec, J.-L. and Queudet, A. and
	Trinquet, Y.},
  title = {{A Data Flow Monitoring Service Based on Runtime Verification for
	AUTOSAR}},
  booktitle = {IEEE 14th International Conference on HPCC-ICESS 2012},
  year = {2012},
  pages = {1508--1515},
  doi = {10.1109/HPCC.2012.220},
  keywords = {Automata;Doped fiber amplifiers;Monitoring;Multicore processing;Real-time
	systems;Runtime;automotive electronics;computerised monitoring;data
	flow computing;data flow graphs;embedded systems;error detection;formal
	verification;minimisation;multiprocessing systems;operating system
	kernels;public domain software;ARM7 MCU;AUTOSAR;RTOS kernel;data
	flow graph;data flow monitoring service;embedded monitors;error detection
	service;expected communication pattern violation detection;formal
	models;memory overheads;multicore real-time in-vehicle embedded system;open-source
	RTOS Trampoline;real-time tasks;runtime verification;service time
	overhead minimization;time overheads;AUTOSAR;RTOS;embedded software;error
	detection;runtime verification;}
}

@ARTICLE{Cotard2012b,
  author = {Cotard, S. and Faucou, S. and B{\'e}chennec, J.L.},
  title = {{A Dataflow Monitoring Service Based on Runtime Verification for
	AUTOSAR OS: Implementation and Performances}},
  journal = {OSPERT},
  year = {2012},
  pages = {46--55},
  owner = {lpatzina},
  timestamp = {2013.02.03}
}

@ARTICLE{Damm2001,
  author = {Damm, W. and Harel, D.},
  title = {{LSCs: Breathing Life into Message Sequence Charts}},
  journal = {Formal Methods in System Design},
  year = {2001},
  volume = {19},
  pages = {45--80},
  number = {1},
  abstract = {While message sequence charts (MSCs) are widely used in industry to
	document the interworking of
	
	processes or objects, they are expressively weak, being based on the
	modest semantic notion of a partial ordering
	
	of events as defined, e.g., in the ITU standard. A highly expressive
	and rigorously defined MSC language is a must
	
	for serious, semantically meaningful tool support for use-cases and
	scenarios. It is also a prerequisite to addressing
	
	what we regard as one of the central problems in behavioral specification
	of systems: relating scenario-based
	
	inter-object specification to state-machine intra-object specification.
	This paper proposes an extension of MSCs,
	
	which we call live sequence charts (or LSCs), since our main extension
	deals with specifying “liveness”, i.e.,
	
	things that must occur. In fact, LSCs allow the distinction between
	possible and necessary behavior both globally,
	
	on the level of an entire chart and locally, when specifying events,
	conditions and progress over time within a chart.
	
	This makes it possible to specify forbidden scenarios, for example,
	and enables naturally specified structuring
	
	constructs such as subcharts, branching and iteration.},
  file = {:.\\Sequence Diagrams\\LSC\\damm_harel2001.pdf:PDF},
  keywords = {formal specification, sequence charts, UML, MSC, LSC},
  owner = {lpatzina},
  publisher = {Springer},
  timestamp = {2009.02.23}
}

@ARTICLE{Frankowiak2009,
  author = {Marcos~R. Frankowiak and Roger~I. Grosvenor and Paul~W. Prickett},
  title = {{Microcontroller-Based Process Monitoring Using Petri-Nets}},
  journal = {EURASIP Journal on Embedded Systems},
  year = {2009},
  volume = {2009},
  pages = {3:1--3:12},
  doi = {10.1155/2009/282708},
  file = {:.\\Monitoring\\Petri Nets\\Frankowiak2009.pdf:PDF},
  keywords = {Petri Nets, hardware, monitoring},
  owner = {spatzina},
  timestamp = {2010.03.29}
}

@INPROCEEDINGS{Groll2009,
  author = {Groll, A. and Ruland, C.},
  title = {{Secure and Authentic Communication on Existing In-Vehicle Networks}},
  booktitle = {Intelligent Vehicles Symposium, IEEE},
  year = {2009},
  pages = {1093--1097},
  abstract = {Because of the increasing number of electronic components, the automotive
	manufacturers introduced data bus systems to decrease the number
	of discrete lines. Inside modern vehicles there are several bus systems
	that are used for communication to provide many safety-relevant functions
	with direct impact to the vehicle's behaviour. Due to missing security
	services, these in-car networks are unprotected against malicious
	attacks. Exemplarily focussing CAN, this article explains that the
	missing of authenticity and confidentiality are the most important
	issues concerning security risks for in-car communication. A flexible
	and adaptive solution using trusted communication groups is presented
	that enables confidential communication between components of a vehicle
	and guarantees that only authentic controllers - holding a certificate
	signed by the manufacturer - are able to be part of these closed
	communication groups.},
  doi = {10.1109/IVS.2009.5164434},
  file = {:.\\Attack Patterns\\Groll2009.pdf:PDF},
  keywords = {In-Vehicle Communication, CAN, Security,
	
	Trusted Communication, Confidentiality, Authenticity},
  owner = {spatzina},
  timestamp = {2010.02.16}
}

@INCOLLECTION{Harel2004a,
  author = {Harel, David and Thiagarajan, P.},
  title = {{Message Sequence Charts}},
  booktitle = {UML for Real},
  publisher = {Springer},
  year = {2004},
  editor = {Lavagno, Luciano and Martin, Grant and Selic, Bran},
  pages = {77--105},
  abstract = {Message sequence charts (MSCs) constitute an attractive visual formalism
	that is widely used to capture system requirements during the early
	design stages in domains such as telecommunication software. A version
	of MSCs called sequence diagrams is one of the behavioral diagram
	types adopted in the UML. In this chapter we survey MSCs and their
	extensions. In particular, we discuss high level MSCs, which allow
	MSCs to be combined in various regular ways, and the more recent
	mechanism of communicating transaction processes , which can be used
	to structure sequence charts to capture system behaviors more directly.
	We also discuss in some detail live sequence charts (LSCs), a multi-modal
	extension of MSCs with considerably richer expressive power, and
	the play-in/out method that makes it possible to use LSCs directly
	as an executable specification.},
  affiliation = {The Weizman Institute of Science Faculty of Mathematics and Computer
	Science USA},
  isbn = {978-0-306-48738-5},
  keyword = {Computer Science},
  keywords = {Message Sequence Charts}
}

@INPROCEEDINGS{Koscher2010,
  author = {Koscher, K. and Czeskis, A. and others},
  title = {{Experimental Security Analysis of a Modern Automobile}},
  booktitle = {IEEE Symposium on SP},
  year = {2010},
  pages = {447--462},
  file = {:.\\Attack Patterns\\Koscher2010.pdf:PDF},
  owner = {spatzina},
  timestamp = {2012.03.26}
}

@ARTICLE{Kumar2009,
  author = {Kumar, R. and Mercer, E.G. and Bunker, A.},
  title = {{Improving Translation of Live Sequence Charts to Temporal Logic}},
  journal = {ENTCS},
  year = {2009},
  volume = {250},
  pages = {137--152},
  number = {1},
  abstract = {An efficient and mathematically rigorous translation from Live Sequence
	Charts (LSCs) to temporal logic is essential to providing an end-to-end
	specification and verification method for System on Chip (SoC) protocols.
	Without mathematical rigor, no translation can be trusted to completely
	represent the LSC specification, while inefficiency renders even
	provably sound translations useless in verifying the correctness
	of industrial-strength protocols. Previous work shows that the LSC-to-temporal
	logic and LSC-to-automata translations can be automated and formalized
	for the LSC language. In the LSC-to-temporal logic translation, the
	extraordinary size of the resulting formula limits the scalability
	of the charts that can be translated and verified. Our work, on the
	other hand, leverages intuitive temporal logic reductions to generate
	a formula that is at most quadratic in the size of the chart and
	demonstrates the benefits of the improved translation on several
	examples.},
  file = {:.\\Transformations\\Seq to Temporal Logic\\Kumar2009.pdf:PDF;:.\\Transformations\\Seq to Temporal Logic\\Kumar2007.pdf:PDF},
  owner = {lpatzina},
  publisher = {Elsevier},
  timestamp = {2010.03.14}
}

@PHDTHESIS{Kumar1995,
  author = {Kumar, S.},
  title = {{Classification and Detection of computer Intrusions}},
  school = {Purdue University},
  year = {1995},
  file = {:.\\IDS\\Kumar1995.pdf:PDF},
  owner = {lpatzina},
  timestamp = {2009.04.03}
}

@ARTICLE{Oh2002,
  author = {Oh, N. and Shirvani, P.P. and McCluskey, E.J.},
  title = {{Control-flow Checking by Software Signatures}},
  journal = {IEEE Transactions on Reliability},
  year = {2002},
  volume = {51},
  pages = {111--122},
  number = {1},
  doi = {10.1109/24.994926},
  issn = {0018-9529}
}

@ARTICLE{Papadimitratos2008,
  author = {Papadimitratos, P. and Buttyan, L. and others},
  title = {{Secure Vehicular Communication Systems: Design and Architecture}},
  journal = {IEEE Communications Magazine},
  year = {2008},
  volume = {46},
  pages = {100--109},
  number = {11},
  abstract = {Significant developments have taken place over the past few years
	in the area of vehicular communication systems. Now, it is well understood
	in the community that security and protection of private user information
	are a prerequisite for the deployment of the technology. This is
	so precisely because the benefits of VC systems, with the mission
	to enhance transportation safety and efficiency, are at stake. Without
	the integration of strong and practical security and privacy enhancing
	mechanisms, VC systems can be disrupted or disabled, even by relatively
	unsophisticated attackers. We address this problem within the SeVeCom
	project, having developed a security architecture that provides a
	comprehensive and practical solution. We present our results in a
	set of two articles in this issue. In this first one, we analyze
	threats and types of adversaries, identify security and privacy requirements,
	and present a spectrum of mechanisms to secure VC systems. We provide
	a solution that can be quickly adopted and deployed. In the second
	article we present our progress toward the implementation of our
	architecture and results on the performance of the secure VC system,
	along with a discussion of upcoming research challenges and our related
	current results.},
  doi = {http://dx.doi.org/10.1109/MCOM.2008.4689252},
  file = {:.\\Examples\\C2C\\Papadimitratos2008.pdf:PDF},
  owner = {lpatzina},
  timestamp = {2009.09.15}
}

@INPROCEEDINGS{Patzina2010,
  author = {Patzina, Lars and Patzina, Sven and Piper, Thorsten and Sch\"{u}rr,
	Andy},
  title = {{Monitor Petri Nets for Security Monitoring}},
  booktitle = {Proc. of 1st S\&D4RCES},
  year = {2010},
  pages = {3:1--3:6},
  publisher = {ACM},
  abstract = {In our integrated model-based development process for security monitors,
	we use Live Sequence Charts (LSCs) as expressive, formal specification.
	Generating target specific monitors from these, requires a complex
	interpretation of their syntax and semantics. In this paper, we propose
	a Petri Net dialect as an intermediate language for monitor generation---named
	Monitor Petri Nets (MPNs). It is based on standard Petri Nets that
	are syntactically and semantically extended to suit the needs of
	monitoring. With our MPNs, we are able to represent use and misuse
	cases described by LSCs in a format that is easy to interpret. MPNs
	provide the basis for the generation of SW/HW security monitors or
	can alternatively be interpreted by a generic monitor.},
  acmid = {1868438},
  articleno = {3},
  isbn = {978-1-4503-0368-2},
  keywords = {live sequence charts, monitor petri nets, signature modeling},
  location = {Vienna, Austria},
  numpages = {6},
  owner = {lpatzina},
  timestamp = {2011.09.12}
}

@INPROCEEDINGS{Patzina2012,
  author = {Sven Patzina and Lars Patzina},
  title = {{A Case Study Based Comparison of ATL and SDM}},
  booktitle = {Applications of Graph Transformations with Industrial Relevance},
  year = {2012},
  editor = {Andy Sch{\"u}rr and D\'{a}niel Varr\'{o} and Gergely Varr\'{o}},
  volume = {7233},
  series = {LNCS},
  pages = {210--221},
  publisher = {Springer},
  abstract = {In model driven engineering (MDE) model-to-model transformations play
	an important role. Nowadays, many model transformation languages
	for dierent purposes and with dierent formal foundations have emerged.
	In this paper, we present a case study that compares the Atlas Transformation
	Language (ATL) with Story Driven Modeling (SDM) by focusing on a
	complex transformation in the security domain. Additionally, we highlight
	the dierences and shortcomings revealed by this case study and propose
	concepts that are missing in both languages.},
  owner = {lpatzina},
  timestamp = {2011.09.12}
}

@INPROCEEDINGS{Patzina2011,
  author = {S. Patzina and L. Patzina and A. Sch{\"u}rr},
  title = {{Extending LSCs for Behavioral Signature Modeling}},
  booktitle = {{Proceedings of 26th IFIP Sec}},
  year = {2011},
  editor = {Camenisch, J. and Fischer-H\"ubner, S. and Murayama, Y. and Portmann,
	A. and Rieder, C.},
  pages = {293--304},
  publisher = {Springer},
  abstract = {Driven by technical innovation, embedded systems are becoming increasingly
	interconnected and have to be secured against failures and threats
	from the outside world. For this purpose, we have defined an integrated
	model-based development process for security monitors which requires
	an expressive, formally well-defined, and easy to learn behavioral
	signature language. In this paper, we demonstrate that Live Sequence
	Charts (LSCs) are adequate for the specification of behavioral signatures.
	To satisfy all requirements and enable compact modeling, we extend
	LSCs by concepts that fit well to the spirit of LSCs.},
  owner = {lpatzina},
  timestamp = {2011.09.12}
}

@INPROCEEDINGS{Piper2012,
  author = {Piper, T. and Winter, S. and Manns, P. and Suri, N.},
  title = {{Instrumenting AUTOSAR for Dependability Assessment: A Guidance Framework}},
  booktitle = {42nd Annual IEEE/IFIP International Conference on DSN},
  year = {2012},
  pages = {1--12},
  organization = {IEEE},
  owner = {lpatzina},
  timestamp = {2013.01.16}
}

@MISC{TheMathWorks2012,
  author = {{The MathWorks, Inc.}},
  title = {{Modeling an Automatic Transmission Controller}},
  howpublished = {online},
  year = {2012},
  note = {visited on 12.02.2013},
  owner = {spatzina},
  timestamp = {2013.01.21},
  url = {http://www.mathworks.de/de/help/simulink/examples/modeling-an-automatic-transmission-controller.html}
}

@comment{jabref-meta: selector_review:}

@comment{jabref-meta: selector_publisher:}

@comment{jabref-meta: selector_author:}

@comment{jabref-meta: selector_journal:}

@comment{jabref-meta: selector_keywords:}

